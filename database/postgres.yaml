apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
    name: superuser-secret
data:
    username: cG9zdGdyZXM= # postgres
    password: UGEkJHcwckQ= # Pa$$w0rD
---
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
    name: application-secret
data:
    username: cmVzdGFwaQ== # restapi
    password: UGEkJHcwckQ= # Pa$$w0rD
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
    name: postgres-cluster
spec:
    instances: 1 # single node without replica
    imageName: docker.io/thiagomadureirabraga/database:16.0-3.4
    # imageName: ghcr.io/cloudnative-pg/postgis:16-3.4 # community
    enableSuperuserAccess: true
    superuserSecret:
        name: superuser-secret
    bootstrap:
        initdb:
            owner: restapi
            database: application
            postInitApplicationSQL: # postInitTemplateSQL -> template1
                - CREATE SCHEMA IF NOT EXISTS business;
                - ALTER DATABASE application SET search_path TO business, public;
                - CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;
                - CREATE EXTENSION IF NOT EXISTS "postgis" WITH SCHEMA public;
                # - CREATE EXTENSION IF NOT EXISTS postgis_topology WITH SCHEMA public;
                # - CREATE EXTENSION IF NOT EXISTS fuzzystrmatch WITH SCHEMA public;
                # - CREATE EXTENSION IF NOT EXISTS postgis_tiger_geocoder WITH SCHEMA public;
                # - GRANT ALL PRIVILEGES ON DATABASE application TO restapi;
            secret:
                name: application-secret
    storage:
        size: 1G
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: postgres-ingress
    annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
spec:
    rules:
        - host: postgres.local
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: postgres-cluster-rw
                            port:
                                number: 80
